{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\n\nfunction GetNewArtwork() {\n  _s();\n\n  const [artworks, setArtworks] = useState([]);\n  const [artworkIndex, setArtworkIndex] = useState();\n  const [buttonClicks, setButtonClicks] = useState(0);\n  fetch(\"https://openaccess-api.clevelandart.org/api/artworks?limit=20&skip=\" + buttonClicks * 20).then(response => {\n    return response.json();\n  }).then(json => {\n    const newArtworks = [...artworks, ...json.data.filter(artwork => {\n      var _artwork$images, _artwork$images$web;\n\n      return (_artwork$images = artwork.images) === null || _artwork$images === void 0 ? void 0 : (_artwork$images$web = _artwork$images.web) === null || _artwork$images$web === void 0 ? void 0 : _artwork$images$web.url;\n    }).map(artwork => {\n      return artwork.images.web.url;\n    })];\n    console.log(newArtworks);\n    setArtworks(newArtworks);\n    setArtworkIndex(Math.floor(Math.random() * newArtworks.length));\n    setButtonClicks(buttonClicks + 1);\n  });\n}\n\n_s(GetNewArtwork, \"I9GiqznVdTUb5A1KjOMpJxgrbK0=\");\n\n_c = GetNewArtwork;\nexport default GetNewArtwork;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetNewArtwork\");","map":{"version":3,"names":["React","GetNewArtwork","artworks","setArtworks","useState","artworkIndex","setArtworkIndex","buttonClicks","setButtonClicks","fetch","then","response","json","newArtworks","data","filter","artwork","images","web","url","map","console","log","Math","floor","random","length"],"sources":["/Users/emma/SEI/projects/Art-Poetry/art-poetry/src/NewArtwork.js"],"sourcesContent":["import React from \"react\"\n\nfunction GetNewArtwork() {\n    const [artworks, setArtworks] = useState([])\n    const [artworkIndex, setArtworkIndex] = useState()\n    const [buttonClicks, setButtonClicks] = useState(0)\n    fetch(\"https://openaccess-api.clevelandart.org/api/artworks?limit=20&skip=\" + buttonClicks * 20)\n      .then((response) => {\n        return response.json()\n      }) \n      .then((json) => {\n        const newArtworks = [\n          ...artworks,\n          ...json.data\n          .filter((artwork) => {\n            return artwork.images?.web?.url\n          })\n          .map((artwork) => {\n            return artwork.images.web.url\n          })\n        ]\n        console.log(newArtworks)\n        setArtworks(newArtworks)\n        setArtworkIndex(Math.floor(Math.random() * newArtworks.length))\n        setButtonClicks(buttonClicks + 1)\n      })\n  }\n\n  export default GetNewArtwork"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,GAAyB;EAAA;;EACrB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCF,QAAQ,EAAhD;EACA,MAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,CAAD,CAAhD;EACAK,KAAK,CAAC,wEAAwEF,YAAY,GAAG,EAAxF,CAAL,CACGG,IADH,CACSC,QAAD,IAAc;IAClB,OAAOA,QAAQ,CAACC,IAAT,EAAP;EACD,CAHH,EAIGF,IAJH,CAISE,IAAD,IAAU;IACd,MAAMC,WAAW,GAAG,CAClB,GAAGX,QADe,EAElB,GAAGU,IAAI,CAACE,IAAL,CACFC,MADE,CACMC,OAAD,IAAa;MAAA;;MACnB,0BAAOA,OAAO,CAACC,MAAf,2EAAO,gBAAgBC,GAAvB,wDAAO,oBAAqBC,GAA5B;IACD,CAHE,EAIFC,GAJE,CAIGJ,OAAD,IAAa;MAChB,OAAOA,OAAO,CAACC,MAAR,CAAeC,GAAf,CAAmBC,GAA1B;IACD,CANE,CAFe,CAApB;IAUAE,OAAO,CAACC,GAAR,CAAYT,WAAZ;IACAV,WAAW,CAACU,WAAD,CAAX;IACAP,eAAe,CAACiB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,WAAW,CAACa,MAAvC,CAAD,CAAf;IACAlB,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;EACD,CAnBH;AAoBD;;GAxBMN,a;;KAAAA,a;AA0BP,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}