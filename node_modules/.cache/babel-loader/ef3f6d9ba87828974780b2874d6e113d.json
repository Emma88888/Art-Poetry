{"ast":null,"code":"var _jsxFileName = \"/Users/emma/SEI/projects/Art-Poetry/art-poetry/src/NewArtwork.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport PoemInput from './PoemInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewArtwork(_ref) {\n  _s();\n\n  let {\n    onSave\n  } = _ref;\n  const [artworks, setArtworks] = useState([]);\n  const [artworkIndex, setArtworkIndex] = useState();\n  const [buttonClicks, setButtonClicks] = useState(0);\n  const [text, changeText] = useState(\"\");\n\n  function getNewArtwork() {\n    fetch(\"https://openaccess-api.clevelandart.org/api/artworks?limit=20&skip=\" + buttonClicks * 20).then(response => {\n      return response.json();\n    }).then(json => {\n      const newArtworks = [...artworks, ...json.data.filter(artwork => {\n        var _artwork$images, _artwork$images$web;\n\n        return (_artwork$images = artwork.images) === null || _artwork$images === void 0 ? void 0 : (_artwork$images$web = _artwork$images.web) === null || _artwork$images$web === void 0 ? void 0 : _artwork$images$web.url;\n      }).map(artwork => {\n        return artwork.images.web.url;\n      })];\n      const artistNames = [...artworks, ...json.data.filter(name => {\n        var _creators$description;\n\n        return (_creators$description = creators.description.web) === null || _creators$description === void 0 ? void 0 : _creators$description.url;\n      }).map(artwork => {\n        return artwork.images.web.url;\n      })];\n      console.log(newArtworks);\n      setArtworks(newArtworks);\n      setArtworkIndex(Math.floor(Math.random() * newArtworks.length));\n      setButtonClicks(buttonClicks + 1);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [buttonClicks > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: artworks[artworkIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(PoemInput, {\n        text: text,\n        onChange: changeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSave(artworks[artworkIndex], text),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getNewArtwork,\n      children: \"New art and poem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewArtwork, \"2n5jBBCLwCnCGxK+vsgN+ep235E=\");\n\n_c = NewArtwork;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewArtwork\");","map":{"version":3,"names":["React","useState","PoemInput","NewArtwork","onSave","artworks","setArtworks","artworkIndex","setArtworkIndex","buttonClicks","setButtonClicks","text","changeText","getNewArtwork","fetch","then","response","json","newArtworks","data","filter","artwork","images","web","url","map","artistNames","name","creators","description","console","log","Math","floor","random","length"],"sources":["/Users/emma/SEI/projects/Art-Poetry/art-poetry/src/NewArtwork.js"],"sourcesContent":["import React from \"react\"\nimport { useState } from 'react';\nimport PoemInput from './PoemInput';\n\nexport default function NewArtwork({onSave}) {\n  const [artworks, setArtworks] = useState([])\n  const [artworkIndex, setArtworkIndex] = useState()\n  const [buttonClicks, setButtonClicks] = useState(0)\n  const [text, changeText] = useState(\"\")\n\n  function getNewArtwork() {\n    fetch(\"https://openaccess-api.clevelandart.org/api/artworks?limit=20&skip=\" + buttonClicks * 20)\n      .then((response) => {\n        return response.json()\n      }) \n      .then((json) => {\n        const newArtworks = [\n          ...artworks,\n          ...json.data\n          .filter((artwork) => {\n            return artwork.images?.web?.url\n          })\n          .map((artwork) => {\n            return artwork.images.web.url\n          })\n        ]\n        const artistNames = [\n          ...artworks,\n          ...json.data\n          .filter((name) => {\n            return creators.description.web?.url\n          })\n          .map((artwork) => {\n            return artwork.images.web.url\n          })\n        ]\n        console.log(newArtworks)\n        setArtworks(newArtworks)\n        setArtworkIndex(Math.floor(Math.random() * newArtworks.length))\n        setButtonClicks(buttonClicks + 1)\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      {/* <div className=\"home\">{Home}</div> */}\n      {buttonClicks > 0 && <><img src={artworks[artworkIndex]}/>\n      <PoemInput text={text} onChange={changeText}/>\n      <button onClick={() => onSave(artworks[artworkIndex], text)}>Save</button></>}\n     <button onClick={getNewArtwork}>New art and poem</button>\n    </div>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,eAAe,SAASC,UAAT,OAA8B;EAAA;;EAAA,IAAV;IAACC;EAAD,CAAU;EAC3C,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;EACA,MAAM,CAACU,IAAD,EAAOC,UAAP,IAAqBX,QAAQ,CAAC,EAAD,CAAnC;;EAEA,SAASY,aAAT,GAAyB;IACvBC,KAAK,CAAC,wEAAwEL,YAAY,GAAG,EAAxF,CAAL,CACGM,IADH,CACSC,QAAD,IAAc;MAClB,OAAOA,QAAQ,CAACC,IAAT,EAAP;IACD,CAHH,EAIGF,IAJH,CAISE,IAAD,IAAU;MACd,MAAMC,WAAW,GAAG,CAClB,GAAGb,QADe,EAElB,GAAGY,IAAI,CAACE,IAAL,CACFC,MADE,CACMC,OAAD,IAAa;QAAA;;QACnB,0BAAOA,OAAO,CAACC,MAAf,2EAAO,gBAAgBC,GAAvB,wDAAO,oBAAqBC,GAA5B;MACD,CAHE,EAIFC,GAJE,CAIGJ,OAAD,IAAa;QAChB,OAAOA,OAAO,CAACC,MAAR,CAAeC,GAAf,CAAmBC,GAA1B;MACD,CANE,CAFe,CAApB;MAUA,MAAME,WAAW,GAAG,CAClB,GAAGrB,QADe,EAElB,GAAGY,IAAI,CAACE,IAAL,CACFC,MADE,CACMO,IAAD,IAAU;QAAA;;QAChB,gCAAOC,QAAQ,CAACC,WAAT,CAAqBN,GAA5B,0DAAO,sBAA0BC,GAAjC;MACD,CAHE,EAIFC,GAJE,CAIGJ,OAAD,IAAa;QAChB,OAAOA,OAAO,CAACC,MAAR,CAAeC,GAAf,CAAmBC,GAA1B;MACD,CANE,CAFe,CAApB;MAUAM,OAAO,CAACC,GAAR,CAAYb,WAAZ;MACAZ,WAAW,CAACY,WAAD,CAAX;MACAV,eAAe,CAACwB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBhB,WAAW,CAACiB,MAAvC,CAAD,CAAf;MACAzB,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;IACD,CA7BH;EA8BD;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,WAEGA,YAAY,GAAG,CAAf,iBAAoB;MAAA,wBAAE;QAAK,GAAG,EAAEJ,QAAQ,CAACE,YAAD;MAAlB;QAAA;QAAA;QAAA;MAAA,QAAF,eACrB,QAAC,SAAD;QAAW,IAAI,EAAEI,IAAjB;QAAuB,QAAQ,EAAEC;MAAjC;QAAA;QAAA;QAAA;MAAA,QADqB,eAErB;QAAQ,OAAO,EAAE,MAAMR,MAAM,CAACC,QAAQ,CAACE,YAAD,CAAT,EAAyBI,IAAzB,CAA7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFqB;IAAA,gBAFvB,eAKC;MAAQ,OAAO,EAAEE,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALD;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAhDuBV,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}